openapi: 3.0.0

# info
info:
  title: KASANARU
  description: KASANARU-Service API
  contact:
    name: Developer
    url: https://github.com/HighPon
    email: s.shiraki081@gmail.com
  version: 1.0.1

# server
servers:
  - url: https://hackaichi2021.herokuapp.com/
    description: herokuで稼働

# tag
tags:
  - name: "user"
    description: "ユーザ関連"

  - name: "login"
    description: "ログイン関連"

paths:
  /api/user/login:
    post:
      tags:
        - login
      summary: ログイン
      description: Emailとパスワードで認証します
      operationId: postLogin
      parameters: []
      requestBody:
        description: ユーザ情報
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserInfo'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Success'
                - $ref: '#/components/schemas/LoginSuccess'
                - $ref: '#/components/schemas/Token'
                
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Failed'
                - $ref: '#/components/schemas/LoginFailed'

  /api/user/register:
    post:
      tags:
        - user
      summary: ユーザを登録
      description: ユーザ情報をデータベースに登録します
      operationId: create
      parameters: []
      requestBody:
        description: ユーザ情報
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UserInfo'
              type: object

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/Success'
                - $ref: '#/components/schemas/RegisterSuccess'
                - $ref: '#/components/schemas/Token'
                
        '400':
          description: Bad Request
          content:
            application/json:
                schema:
                  allOf:
                  - $ref: '#components/schemas/Failed'
                  - $ref: '#components/schemas/RegisterFailed'     

# component
components:
  schemas:
    UserInfo: 
      description: "ユーザ情報"
      type: object
      properties:
        email:
          type: string
          example: example@gmail.com
        password:
          type: string
          example: plainPassword
        username:
          type: string
          example: Yamada
        age:
          type: integer
          format: int64
          example: 50

    LoginInfo: 
      description: "ユーザ情報"
      type: object
      properties:
        email:
          type: string
          example: example@gmail.com
        password:
          type: string
          example: plainPassword
          
    Token:
      description: "認証系のトークン"
      type: object
      properties:
        access_token:
          type: string
          example: xxxxxx
        refresh_token:
          type: string
          example: xxxx
    
    Failed:
      description: "失敗時"
      type: object
      properties:
        status:
          type: string
          example: Error

    Success:
      description: "成功時"
      type: object
      properties:
        status:
          type: string
          example: Success

    RegisterFailed:
      description: "登録失敗"
      type: object
      properties:
        message:
          type: string
          example: Your account is already registered

    RegisterSuccess:
      description: "登録成功"
      type: object
      properties:
        message:
          type: string
          example: User registered successfully

    LoginFailed:
      description: "ログイン失敗"
      type: object
      properties:
        message:
          type: string
          example: Unauthorized

    LoginSuccess:
      description: "ログイン成功"
      type: object
      properties:
        message:
          type: string
          example: Login successfully
